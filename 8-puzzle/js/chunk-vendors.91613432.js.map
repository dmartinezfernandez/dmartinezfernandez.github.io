{"version":3,"sources":["webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///(webpack)/buildin/global.js"],"names":["stack","warn","msg","args","instance","length","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","join","proxy","map","vnode","formatComponentName","type","warnArgs","push","formatTrace","console","currentVNode","normalizedStack","last","recurseCount","parentInstance","parent","logs","forEach","entry","i","formatTraceEntry","postfix","isRoot","open","close","props","formatProps","res","keys","Object","slice","key","formatProp","value","raw","JSON","stringify","name","fn","err","handleError","callWithAsyncErrorHandling","catch","values","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","then","this","bind","findInsertionIndex","job","start","end","jobId","getId","middle","middleJobId","queueJob","includes","allowRecurse","pos","splice","queueFlush","flushJobs","invalidateJob","indexOf","queueCb","cb","activeQueue","pendingQueue","index","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","Set","flushPostFlushCbs","deduped","sort","a","b","id","Infinity","Map","emit","event","rawArgs","isModelListener","startsWith","modelArg","modifiersKey","number","trim","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","undefined","__emits","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","options","replace","toLowerCase","isRenderingCompiledSlot","setCompiledSlotRendering","n","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","openBlock","prevInstance","closeBlock","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","result","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","call","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","dirs","concat","transition","blockStack","createVNode","Comment","filterSingleRoot","children","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","default","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","effects","initProps","rawProps","isStateful","isSSR","InternalObjectKey","propsDefaults","create","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","String","getType","ctor","match","toString","isSameType","expectedTypes","findIndex","t","injectHook","hook","target","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","watchEffect","effect","doWatch","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","flush","onTrack","onTrigger","getter","cleanup","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","onStop","oldValue","active","newValue","scheduler","queuePostRenderEffect","isMounted","lazy","recordInstanceBoundEffect","instanceWatch","publicThis","has","add","v","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","Array","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","get","set","callHook","leavingVNode","afterHook","cancelHook","called","done","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","RegExp","matches","pattern","split","test","onActivated","registerKeepAliveHook","onDeactivated","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","binding","dir","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","directives","provides","uid","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","isSVG","__vue_app__","hasMismatch","isSVGContainer","container","namespaceURI","tagName","isComment","node","nodeType","createHydrationFunctions","rendererInternals","mt","mountComponent","patch","o","patchProp","nextSibling","parentNode","insert","createComment","hydrateNode","firstChild","parentComponent","parentSuspense","slotScopeIds","isFragmentStart","onMismatch","handleMismatch","ref","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","anchor","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","dynamicChildren","onClick","vnodeHooks","onVnodeBeforeMount","invokeVNodeHook","onVnodeMounted","innerHTML","textContent","next","parentVNode","l","fragmentSlotScopeIds","isFragment","initFeatureFlags","isAsyncWrapper","prodEffectOptions","rawRef","oldRawRef","r","exposed","owner","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","n1","n2","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","beforeEnter","enter","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","m","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","bum","um","suspenseId","pendingId","deps","_vnode","mc","pc","pbc","createApp","shallow","ch1","ch2","arr","c","len","arrI","isTeleport","__isTeleport","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","Symbol","warnMissing","selfName","getComponentName","registry","currentBlock","disableTracking","pop","shouldTrack","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","targetAnchor","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","slot","slotFlag","toMerge","existing","incoming","provide","parentProvides","inject","treatDefaultAsFactory","arguments","shouldCacheAccess","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","defineProperty","enumerable","configurable","createWatcher","Reflect","ownKeys","callHookWithMixinAndExtends","base","selfHook","createPathGetter","path","segments","resolveMergedOptions","__merged","mergeOptions","to","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","Proxy","setup","createSetupContext","resolvedResult","handleSetupResult","e","finishComponentSetup","isRuntimeOnly","template","delimiters","_rc","classifyRE","classify","str","toUpperCase","displayName","__file","inferFromRegistry","getterOrOptions","h","propsOrChildren","prototype","renderList","renderItem","iterator","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","querySelector","selector","_value","temp","first","patchClass","transitionClasses","_vtc","className","patchStyle","display","cssText","setStyle","removeAttribute","importantRE","val","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","_getNow","Date","now","skipTimestampCheck","window","createEvent","timeStamp","ffMatch","navigator","userAgent","Number","cachedNow","reset","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","delete","size","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","body","offsetHeight","WeakMap","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","SVGElement","Element","makeMap","expectsLowerCase","list","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","assign","hasOwn","isMap","toTypeString","isSet","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","obj","toNumber","parseFloat","isNaN","targetMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","createReactiveEffect","stop","enableTracking","resetTracking","trackStack","pauseTracking","track","depsMap","dep","trigger","oldTarget","effectsToAdd","run","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","isRef","shouldUnwrap","readonly","reactive","method","toRaw","apply","createSetter","shallowSet","hadKey","deleteProperty","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","isKeyOnly","innerIterator","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isReactive","isProxy","convert","__v_isRef","createRef","RefImpl","_rawValue","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","toRef","object","ComputedRefImpl","_setter","_dirty","self","setter","g","module","exports"],"mappings":"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","file":"js/chunk-vendors.91613432.js","sourcesContent":["import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    // mark this as a compiled slot function.\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue(props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        // means unmount\r\n        value = null;\r\n    }\r\n    else if (isAsyncWrapper(vnode)) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    else if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n        value = vnode.component.exposed || vnode.component.proxy;\r\n    }\r\n    else {\r\n        value = vnode.el;\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense, null);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    unmount(children[i], parentComponent, parentSuspense, true, optimized);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        shouldCacheAccess = false;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        shouldCacheAccess = true;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    for (let i = 0; i < globalMixins.length; i++) {\r\n        callHookWithMixinAndExtends(name, type, globalMixins[i], instance);\r\n    }\r\n    callHookWithMixinAndExtends(name, type, options, instance);\r\n}\r\nfunction callHookWithMixinAndExtends(name, type, options, instance) {\r\n    const { extends: base, mixins } = options;\r\n    const selfHook = options[name];\r\n    if (base) {\r\n        callHookWithMixinAndExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        for (let i = 0; i < mixins.length; i++) {\r\n            callHookWithMixinAndExtends(name, type, mixins[i], instance);\r\n        }\r\n    }\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    shouldCacheAccess = false;\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    shouldCacheAccess = true;\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.11\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst shallowReadonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}