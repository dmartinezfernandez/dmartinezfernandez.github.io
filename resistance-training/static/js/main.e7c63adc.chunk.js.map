{"version":3,"sources":["model/Essentials.js","components/RMTable.js","model/Precision.js","model/Exercise.js","model/QueryString.js","components/Report.js","components/Calculator.js","components/Form.js","App.js","index.js"],"names":["Essentials","load","reps","this","_validateLoad","_validateReps","data","find","rm","factor","NaN","undefined","RMTable","props","precision","Number","decimals","isNaN","isInteger","toString","split","length","round","value","x","Math","parseFloat","toFixed","class","exercises","map","exercise","name","style","rm1","Precision","values","default","isValid","includes","parse","Exercise","QueryString","params","URLSearchParams","window","location","search","param1","get","param2","param3","split1","item","trim","split2","i","push","Report","Calculator","useState","setLoad","setReps","calc1RM","showRMTable","type","placeholder","onChange","e","target","Form","setExercises","setRM1","setPrecision","width","selectedOptions","href","onClick","preventDefault","origin","pathname","submit","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.e7c63adc.chunk.js","sourcesContent":["/**\r\n * @property {Object[]} data - Repetitions Maximum and percentage of 1RM\r\n */\r\nclass Essentials {\r\n    static data = [\r\n        { reps: 1, factor: 1.0 },\r\n        { reps: 2, factor: 0.95 },\r\n        { reps: 3, factor: 0.93 },\r\n        { reps: 4, factor: 0.9 },\r\n        { reps: 5, factor: 0.87 },\r\n        { reps: 6, factor: 0.85 },\r\n        { reps: 7, factor: 0.83 },\r\n        { reps: 8, factor: 0.8 },\r\n        { reps: 9, factor: 0.77 },\r\n        { reps: 10, factor: 0.75 },\r\n        { reps: 11, factor: 0.71 },\r\n        { reps: 12, factor: 0.67 },\r\n        //{ reps: 13, factor: 0.6633 },\r\n        //{ reps: 14, factor: 0.6567 },\r\n        { reps: 15, factor: 0.65 }\r\n    ];\r\n    /**\r\n     * Calculate 1RM.\r\n     * @param {number} load \r\n     * @param {number} reps - Repetitions\r\n     * @returns {number}\r\n     */\r\n    static calc1RM(load, reps) {\r\n        if (!(this._validateLoad(load) && this._validateReps(reps))) {\r\n            return NaN;\r\n        }\r\n        return load / this.data.find(rm => rm.reps === reps).factor;\r\n    }\r\n    static _validateReps(reps) {\r\n        return this.data.find(rm => rm.reps === reps) !== undefined;\r\n    }\r\n    static _validateLoad(load) {\r\n        return load > 0.0;\r\n    }\r\n}\r\n\r\nexport default Essentials;","import Essentials from \"../model/Essentials\";\r\n/** @typedef {import(\"../model/Exercise\").default} Exercise */\r\n\r\n/**\r\n * RM Table component\r\n * @param {Object} props\r\n * @param {Exercise[]} props.exercises - Exercises\r\n * @param {number | string} props.precision - Precision\r\n */\r\nfunction RMTable(props) {\r\n    const precision = Number(props.precision);\r\n    const decimals = !isNaN(precision) && !Number.isInteger(precision) ?\r\n        precision.toString().split('.')[1].length : 0;\r\n    const round = function (value) {\r\n        let x = Math.round(value / precision) * precision;\r\n        x = parseFloat(x.toFixed(decimals));\r\n        return x;\r\n    }\r\n    const background = (factor) => {\r\n        if (factor > 0.85) {\r\n            return {\r\n                'background-color': 'var(--strength-color)'\r\n            };\r\n        }\r\n        else if (factor === 0.85) {\r\n            return {\r\n                'background-image': 'linear-gradient(var(--strength-color), var(--hypertrophy-color))'\r\n            };\r\n        }\r\n        else if (factor > 0.67) {\r\n            return {\r\n                'background-color': 'var(--hypertrophy-color)'\r\n            };\r\n        }\r\n        else if (factor === 0.67) {\r\n            return {\r\n                'background-image': 'linear-gradient(var(--hypertrophy-color), var(--undefined-color))'\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                'background-color': 'var(--undefined-color)'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <table class=\"numeric-table\">\r\n                <tr>\r\n                    <th>Load</th>\r\n                    <th>RM</th>\r\n                    {props.exercises.map((exercise) => <th><i>{exercise.name}</i></th>)}\r\n                </tr>\r\n                {Essentials.data.map(rm =>\r\n                    <tr>\r\n                        <td style={background(rm.factor)}>{rm.factor * 100} %</td>\r\n                        <td>{rm.reps}</td>\r\n                        {props.exercises.map((exercise) =>\r\n                            <td>{round(exercise.rm1 * rm.factor)}</td>)}\r\n                    </tr>)}\r\n            </table>\r\n            <small class=\"darker\">Precision = {precision}</small><br />\r\n        </div>);\r\n}\r\n\r\nexport default RMTable;","const Precision = (function () {\r\n    const DEFAULT = 1;\r\n    const values = [2.5, 1, 0.5];\r\n    const isValid = (value) => values.includes(value);\r\n    /**\r\n     * \r\n     * @param {*} value \r\n     * @returns Parsed number from value if valid, default value otherwhise.\r\n     */\r\n    const parse = (value) => {\r\n        const x = parseFloat(value);\r\n        if (values.includes(x))\r\n            return x;\r\n        else\r\n            return DEFAULT;\r\n    };\r\n\r\n    return {\r\n        values,\r\n        default: DEFAULT,\r\n        isValid,\r\n        parse\r\n    };\r\n}());\r\n\r\nexport default Precision;","class Exercise {\r\n    /**\r\n     * @param {string} name - Exercise name\r\n     * @param {number} rm1 - 1RM\r\n     */\r\n    constructor(name, rm1) {\r\n        this.name = name;\r\n        this.rm1 = rm1;\r\n    }\r\n}\r\n\r\nexport default Exercise;","import Precision from \"./Precision\";\r\nimport Exercise from \"./Exercise\";\r\n\r\n/**\r\n * @type {object}\r\n * @property {Exercise[]} exercises\r\n * @property {number} precision\r\n * @property {boolean} isValid - Query string parsed successfully\r\n * @property {object} params - Query string params as strings\r\n * @property {string} params.exercises - Comma separated exercise names\r\n * @property {string} params.rm1 - Comma separated exercise 1RM values\r\n * @property {string} params.precision - Precision\r\n */\r\nconst QueryString = (\r\n    function () {\r\n        /** @type {Exercise[]} */\r\n        const exercises = [];\r\n        const params = new URLSearchParams(window.location.search);\r\n        const param1 = params.get(\"exercises\");\r\n        const param2 = params.get(\"1rm\");\r\n        const param3 = params.get(\"precision\");\r\n\r\n        if (param1 != null && param2 != null) {\r\n            const split1 = param1.split(\",\").map(item => item.trim());\r\n            const split2 = param2.split(\",\").map(item => item.trim()).map(Number);\r\n            if (split1.length && split1.length === split2.length) {\r\n                for (let i = 0; i < split1.length; i++) {\r\n                    exercises.push(new Exercise(split1[i], split2[i]));\r\n                };\r\n            }\r\n        }\r\n\r\n        const precision = Precision.parse(param3);\r\n\r\n        return {\r\n            exercises,\r\n            precision,\r\n            isValid: exercises.length > 0,\r\n            params: {\r\n                exercises: param1,\r\n                rm1: param2,\r\n                precision: param3\r\n            }\r\n        };\r\n    }());\r\n\r\nexport default QueryString;","import RMTable from \"./RMTable\";\r\nimport QueryString from \"../model/QueryString\";\r\n\r\nfunction Report() {\r\n    const data = QueryString;\r\n\r\n    return (data.isValid &&\r\n        <section>\r\n            <RMTable exercises={data.exercises} precision={data.precision}></RMTable>\r\n            <br />\r\n        </section>);\r\n}\r\n\r\nexport default Report;","import { useState } from 'react';\r\nimport RMTable from \"./RMTable\";\r\nimport Essentials from '../model/Essentials';\r\nimport Precision from '../model/Precision';\r\nimport Exercise from '../model/Exercise';\r\n\r\n/**\r\n * 1RM Calculator component\r\n */\r\nfunction Calculator() {\r\n    const [load, setLoad] = useState(undefined);\r\n    const [reps, setReps] = useState(undefined);\r\n    const rm1 = Essentials.calc1RM(load, Number(reps));\r\n    const showRMTable = !isNaN(rm1);\r\n    const exercises = [new Exercise('Calc.', rm1)];\r\n    return <section>\r\n        <details>\r\n            <summary>1RM Calculator</summary>\r\n            <br />\r\n            <label>Load: </label><br />\r\n            <input type=\"text\" value={load} placeholder=\"Enter load here\" onChange={(e) => setLoad(e.target.value)} /><br />\r\n            <label>Repetitions: </label><br />\r\n            <input type=\"text\" value={reps} placeholder=\"Enter repetitions here\" onChange={(e) => setReps(e.target.value)} /><br />\r\n            {showRMTable &&\r\n                <RMTable exercises={exercises} precision={Precision.default}></RMTable>\r\n            }\r\n        </details >\r\n    </section>;\r\n}\r\n\r\nexport default Calculator;","import { useState } from 'react';\r\nimport Precision from '../model/Precision';\r\nimport QueryString from '../model/QueryString';\r\n\r\nfunction Form() {\r\n    const [exercises, setExercises] = useState(QueryString.params.exercises);\r\n    const [rm1, setRM1] = useState(QueryString.params.rm1);\r\n    const [precision, setPrecision] = useState(QueryString.precision);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        window.location = window.location.origin + window.location.pathname + \"?exercises=\" + exercises + \"&1rm=\" + rm1 + \"&precision=\" + precision;\r\n    }\r\n\r\n    return <section>\r\n        <details>\r\n            <summary>Query</summary>\r\n\r\n            <br />\r\n            <label>Exercises:</label><br />\r\n            <input type=\"text\" placeholder=\"Enter comma separated exercises here\" style={{ width: '100%' }}\r\n                value={exercises} onChange={e => setExercises(e.target.value)} />\r\n            <label>1RM:</label><br />\r\n            <input type=\"text\" placeholder=\"Enter comma separated 1RM values here\" style={{ width: '100%' }}\r\n                value={rm1} onChange={e => setRM1(e.target.value)} /><br />\r\n            <label>Precision:</label><br />\r\n            <select value={precision} onChange={e => setPrecision(e.target.selectedOptions[0].value)}>\r\n                {Precision.values.map(value => <option value={value}>{value}</option>)}\r\n            </select><br />\r\n            <br />\r\n            <a href=\".\" onClick={(e) => submit(e)}>Submit</a><br />\r\n            Enter comma separated exercises and 1RM values, then click submit and add the new URL to your browser bookmarks.\r\n        </details>\r\n        <br />\r\n    </section >;\r\n}\r\n\r\nexport default Form;","import Report from \"./components/Report\";\nimport Calculator from \"./components/Calculator\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div>\n\n      {/* RM Table */}\n      {<Report></Report>}\n\n      {/* RM Form */}\n      <Form></Form>\n\n      {/* 1RM Calculator */}\n      <Calculator></Calculator>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"main.app\")\n);\n"],"sourceRoot":""}